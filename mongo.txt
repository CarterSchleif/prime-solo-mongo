//1.) Create a collection named orders.
db.createCollection("orders")

//2.) Insert at least 3 documents that represent an order.
let orders = db.orders
> orders.insert({ orderDate: new ISODate('2017-02-03'), orderTotal: 1, lineItems:[{unitPrice: 1},{quantity: 1},{productName: "thing"}]})
WriteResult({ "nInserted" : 1 })
> orders.insert({orderDate: new ISODate('2017-04-04'), orderTotal: 2, lineItems:[{unitPrice: 2},{quantity: 2},{productName: "thing2"}]})
WriteResult({ "nInserted" : 1 })
> orders.insert({orderDate: new ISODate('2017-01-02'), orderTotal: 3, lineItems:[{unitPrice: 3}, {quantity: 3}, {productName: "thing3"}]})
WriteResult({ "nInserted" : 1 })

//3.) Find all orders and make them look pretty.
orders.find().pretty()

//4.) Find all orders with an orderDate that is after 1/31/2017.
orders.find({orderDate: {$gt: new Date('2017-31-01')}})

//5.) Change the orderTotal from 2/3/2017 to 63 dollars
orders.update({orderDate: ('2017-03-02')}, {$set: {orderTotal: "63 dollars"}})

//6.) Add another lineItem to the order from 4/4/2017
orders.update({orderDate: ISODate('2017-04-04')}, {$push: {lineItem: {unitPrice: 4, quantity: 4, productName: "newItem"}}})

//7.) Change the first lineItem in the order from 1/2/2017 to be for 2 'transistor radio's
orders.update({orderDate: ISODate('2017-01-02')}, {$set: {"lineItems.0.unitPrice": 3,"lineItems.0.quantity": 2, "lineItems.0.productName": "transistor radio"}})

//8.) Find orders with lineItems that have a quantity that is less than 10, but greater than 2.
orders.find({lineItems: {$elemMatch: {quantity: {$lte: 10, $gte: 2}}}})